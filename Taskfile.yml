---
version: "3"
env:
  LOCAL_REGISTRY: "titan.local:5000"
  PROJECT: "workflows-testbed-docker"
tasks:
  # Build
  tag:
    summary: Generate build tag
    desc: Generate build tag
    silent: true
    cmds:
      - |
        if [ -z "$(git status --porcelain)" ]; then
          echo $(git rev-parse --short HEAD)
        else
          echo "dev-$(date +%s)"
        fi
  image:
    summary: Build deployment images
    desc: Build deployment images
    silent: true
    cmds:
      - |
        # Credentials
        stty -echo
        read -r -p 'Enter Github Username: ' GITHUB_USER_REF
        echo ""
        read -r -p 'Enter Github personal access token with read:packages permissions: ' GITHUB_TOKEN_REF
        echo ""
        stty echo
        export GITHUB_USER_REF=$GITHUB_USER_REF
        export GITHUB_TOKEN_REF=$GITHUB_TOKEN_REF

        version=$(xmlstarlet sel -N mvn='http://maven.apache.org/POM/4.0.0' -t -m '/mvn:project/mvn:version' -v . -n <pom.xml)

        # Clean
        rm -rf target && mkdir target

        # Build
        docker build -f Dockerfile . --progress=plain --sbom=true --build-arg MAVEN_PHASE="clean install" --build-arg ENFORCER_FAIL=false --build-arg ARTIFACT_VERSION=$version --secret id=GITHUB_USER_REF --secret id=GITHUB_TOKEN_REF --provenance=false --target output --output type=local,dest=target

        # Status
        docker build -f Dockerfile . --progress=plain --sbom=true --build-arg MAVEN_PHASE="clean install" --build-arg ENFORCER_FAIL=false --build-arg ARTIFACT_VERSION=$version --secret id=GITHUB_USER_REF --secret id=GITHUB_TOKEN_REF --provenance=false --target status

        # Image
        docker build -f Dockerfile . --progress=plain --sbom=true --build-arg MAVEN_PHASE="clean install" --build-arg ENFORCER_FAIL=false --build-arg ARTIFACT_VERSION=$version --secret id=GITHUB_USER_REF --secret id=GITHUB_TOKEN_REF --provenance=false --tag $LOCAL_REGISTRY/$PROJECT/testbed-docker:{{ .TAG }}

    vars:
      TAG:
        sh: task tag
  build:
    summary: Build Java projects on host
    desc: Build Java projects on host
    cmds:
      - mvn clean install -Denforcer.fail=false
  tool-versions:upgrade:repo:
    summary: Upgrade version in .tool-versions
    desc: Upgrade version in .tool-versions
    internal: true
    silent: true
    cmds:
      - |
        version=$(gh api -H "Accept: application/vnd.github+json" repos/{{ .OWNER }}/{{ .NAME }}/releases/latest | jq .tag_name -r)
        version=${version//v}
        sed -i "s/{{ .NAME }}.*/{{ .NAME }} $version/g" .tool-versions
  tool-versions:upgrade:
    summary: Upgrade versions in .tool-versions
    desc: Upgrade versions in .tool-versions
    cmds:
      - task: tool-versions:upgrade:trivy
      - task: tool-versions:upgrade:task
  tool-versions:upgrade:trivy:
    summary: Upgrade version of trivy in .tool-versions
    desc: Upgrade version of trivy .tool-versions
    cmds:
      - task: tool-versions:upgrade:repo
        vars:
          OWNER: aquasecurity
          NAME: trivy
  tool-versions:upgrade:task:
    summary: Upgrade version of task in .tool-versions
    desc: Upgrade version of task .tool-versions
    cmds:
      - task: tool-versions:upgrade:repo
        vars:
          OWNER: go-task
          NAME: task
  semgrep:auto:
    summary: Run semgrep static analysis with auto config
    desc: Run semgrep static analysis with auto config
    silent: true
    cmds:
      - semgrep --config=auto .
  semgrep:security-audit:
    summary: Run semgrep static analysis with security-audit config
    desc: Run semgrep static analysis with security-audit config
    silent: true
    cmds:
      - semgrep --config=p/security-audit .
  semgrep:secrets:
    summary: Run semgrep static analysis with secrets config
    desc: Run semgrep static analysis with secrets config
    silent: true
    cmds:
      - semgrep --config=p/secrets .
  trivy:fs:
    summary: Run trivy fs check
    desc: Run trivy fs check
    silent: true
    cmds:
      - trivy fs .
  trivy:config:
    summary: Run trivy config check
    desc: Run trivy config check
    silent: true
    cmds:
      - trivy config .
